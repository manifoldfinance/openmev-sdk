syntax = "proto3";

package com.manifoldfinance.protobuf.action;

option java_multiple_files = true;
option cc_enable_arenas = true;

message ERC20Transfer {
  string recipient = 1;       // hex encoded recipient address
  string amount = 2;          // hex encoded amount of tokens
}

message ERC20Approval {
  string spender = 1;
  string amount = 2;
}

message SwapExactTokensForTokens {
  string amount_in = 1;       // hex encoded bigint
  string amount_out_min = 2;  // hex encoded bigint
  string to = 3;              // hex encoded address
  int32 deadline = 4;         // seconds since epoch
  repeated string path = 5;   // array of hex encoded addresses
}

message SwapTokensForExactTokens {
  string amount_out = 1;      // hex encoded bigint
  string amount_in_max = 2;   // hex encoded bigint
  string to = 3;              // hex encoded address
  int32 deadline = 4;         // seconds since epoch
  repeated string path = 5;   // array of hex encoded addresses
}

message SwapExactETHForTokens {
  string amount_out_min = 1;  // hex encoded bigint
  string to = 2;              // hex encoded address
  int32 deadline = 3;         // seconds since epoch
  repeated string path = 4;   // array of hex encoded addresses
}

message SwapTokensForExactETH {
  string amount_out = 1;      // hex encoded bigint
  string amount_in_max = 2;   // hex encoded bigint
  string to = 3;              // hex encoded address
  int32 deadline = 4;         // seconds since epoch
  repeated string path = 5;   // array of hex encoded addresses
}

message SwapExactTokensForETH {
  string amount_in = 1;       // hex encoded bigint
  string amount_out_min = 2;  // hex encoded bigint
  string to = 3;              // hex encoded address
  int32 deadline = 4;         // seconds since epoch
  repeated string path = 5;   // array of hex encoded addresses
}

message SwapETHForExactTokens {
  string amount_out = 1;      // hex encoded bigint
  string to = 2;              // hex encoded address
  int32 deadline = 3;         // seconds since epoch
  repeated string path = 4;   // array of hex encoded addresses
}

message SwapExactTokensForTokensSupportingFeeOnTransferTokens {
  string amount_in = 1;       // hex encoded bigint
  string amount_out_min = 2;  // hex encoded bigint
  string to = 3;              // hex encoded address
  int32 deadline = 4;         // seconds since epoch
  repeated string path = 5;   // array of hex encoded addresses
}

message SwapExactETHForTokensSupportingFeeOnTransferTokens {
  string amount_out_min = 1;  // hex encoded bigint
  string to = 2;              // hex encoded address
  int32 deadline = 3;         // seconds since epoch
  repeated string path = 4;   // array of hex encoded addresses
}

message SwapExactTokensForETHSupportingFeeOnTransferTokens {
  string amount_in = 1;       // hex encoded bigint
  string amount_out_min = 2;  // hex encoded bigint
  string to = 3;              // hex encoded address
  int32 deadline = 4;         // seconds since epoch
  repeated string path = 5;   // array of hex encoded addresses
}

message SwapExactTokensForTokensWithFlashloan {
  string router = 1;          // hex encoded address e.g. Sushi, Uniswap etc
  string amount_in = 2;       // hex encoded bigint
  int32 deadline = 3;         // seconds since epoch
  repeated string path = 4;   // array of hex encoded addresses
}

message SwapExactTokensForTokensWithFlashloanMulti {
  repeated string router = 1; // hex encoded address e.g. Sushi, Uniswap etc
  string amount_in = 2;       // hex encoded bigint
  int32 deadline = 3;         // seconds since epoch
  repeated string path = 4;   // array of hex encoded addresses
}
