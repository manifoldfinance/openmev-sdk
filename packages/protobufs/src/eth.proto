syntax = "proto3";

package com.manifoldfinance.protobuf.eth;

import "action.proto";

option java_multiple_files = true;
option cc_enable_arenas = true;

message AccountKey {
  string address = 1;
}

message Account {
  string balance = 1;
  optional string nonce = 2;
  optional string code_hash = 3;
  optional string storage_root = 4;
}

//

message AccountBalanceKey {
  string block_number = 1;
  string address = 2;
}

message AccountBalance {
  string address = 1;
  optional string nonce = 2;
  string ether = 3;
  optional bool is_externally_owned = 4;
  repeated TokenBalance token_balances = 5;
}

message BlockAccountBalances {
  string block_number = 1;
  repeated AccountBalance balances = 2;
}

//

message BalanceCheck {
  string account = 1;         // hex encoded address
  repeated string tokens = 2; // hex encoded token addresses
}

//

message Block {
  BlockHeader header = 1;
  repeated Transaction transactions = 2;
}

message BlockHeader {
  string block_number = 1;
  string block_hash = 2;
  string parent_hash = 3;
  string mix_hash = 4;
  string sha3_uncles = 5;
  string logs_bloom = 6;
  string transactions_root = 7;
  string state_root = 8;
  string receipts_root = 9;
  string miner = 10;
  string difficulty = 11;
  string total_difficulty = 12;
  string extra_data = 13;
  int64 size = 14;
  int64 gas_limit = 15;
  int64 gas_used = 16;
  int64 timestamp = 17;

  optional string nonce = 18;
  optional string author = 19;

  repeated string uncles = 20;
  repeated string seal_fields = 21;
  repeated string transactions = 22;

  // EIP 1559
  optional string baseFeePerGas = 23; // hex encode big integer
}

message BlockHash {
  string block_hash = 1;
}

message BlockNumber {
  string block_number = 1;
}

message BlockReceipts {
  string block_number = 1;
  repeated TransactionReceipt receipts = 2;
}

//

message TokenBalanceKey {
  string block_number = 1;
  string address = 2;
  string token_address = 3;
}

message TokenBalance {
  string token_address = 1;
  string balance = 2;
}

//

message TransactionKey {
  string transaction_hash = 1;
  int32 transaction_index = 2;
}

message FrontierTransaction {

  string value = 1;     // hex encoded big integer
  string input = 2;     // hex bytes
  int64 nonce = 3;      //
  string gasPrice = 4;  // hex encoded big integer
  int64 gasLimit = 5;

  optional string v = 6;    // hex encoded big integer
  optional string r = 7;    // hex encoded big integer
  optional string s = 8;    // hex encoded big integer

  optional string to = 9;  //
  optional string chain_id = 10;   // hex encoded big integer
  optional string sender = 11;
}

message AccessListEntry {
  string address = 1;
  repeated string storageKeys = 2;
}

message EIP2930Transaction {

  string chain_id = 1;  // hex encoded big integer
  string value = 2;     // hex encoded big integer
  string input = 3;     // hex bytes
  int64 nonce = 4;      //
  string gasPrice = 5;  // hex encoded big integer
  int64 gasLimit = 6;

  repeated AccessListEntry accessList = 7;

  optional int32 v = 8;     // byte value
  optional string r = 9;    // hex encoded big integer
  optional string s = 10;    // hex encoded big integer

  optional string to = 11;
  optional string sender = 12;
}

message EIP1559Transaction {

  string chain_id = 1;  // hex encoded big integer
  string value = 2;     // hex encoded big integer
  string input = 3;     // hex bytes
  int64 nonce = 4;      //
  string maxPriorityFeePerGas = 5;  // hex encoded big integer
  string maxFeePerGas = 6;          // hex encoded big integer
  int64 gasLimit = 7;

  repeated AccessListEntry accessList = 8;

  optional int32 v = 9;       // byte value
  optional string r = 10;    // hex encoded big integer
  optional string s = 11;    // hex encoded big integer

  optional string to = 12;
  optional string sender = 13;
}

enum TransactionType {
  FRONTIER = 0;
  EIP2930 = 1;
  EIP1559 = 2;
}

message Transaction {

  TransactionType type = 1;
  optional string signed = 2;
  optional int64 deadline_at = 3;

  optional string transaction_hash = 16;
  optional int32 transaction_index = 17;

  optional string block_hash = 18;
  optional string block_number = 19;

  // set from web3
  optional string gas_price = 20;

  optional TransactionReceipt receipt = 21;

  oneof payload {
    FrontierTransaction transaction_frontier = 22;
    EIP2930Transaction transaction_eip2930 = 23;
    EIP1559Transaction transaction_eip1559 = 24;
  }

  oneof action {
    com.manifoldfinance.protobuf.action.SwapExactTokensForTokens swap_exact_tokens_for_tokens = 33;
    com.manifoldfinance.protobuf.action.SwapTokensForExactTokens swap_tokens_for_exact_tokens = 34;
    com.manifoldfinance.protobuf.action.SwapExactETHForTokens swap_exact_eth_for_tokens = 35;
    com.manifoldfinance.protobuf.action.SwapTokensForExactETH swap_tokens_for_exact_ETH = 36;
    com.manifoldfinance.protobuf.action.SwapExactTokensForETH swap_exact_tokens_for_ETH = 37;
    com.manifoldfinance.protobuf.action.SwapETHForExactTokens swap_eth_for_exact_tokens = 38;
    com.manifoldfinance.protobuf.action.SwapExactTokensForTokensSupportingFeeOnTransferTokens swap_exact_tokens_for_tokens_supporting_fee_on_transfer_tokens = 39;
    com.manifoldfinance.protobuf.action.SwapExactETHForTokensSupportingFeeOnTransferTokens swap_exact_eth_for_tokens_supporting_fee_on_transfer_tokens = 40;
    com.manifoldfinance.protobuf.action.SwapExactTokensForETHSupportingFeeOnTransferTokens swap_exact_tokens_for_eth_supporting_fee_on_transfer_tokens = 41;
  }
}

//

message TransactionLogKey {
  string transaction_hash = 1;
  int32 transaction_index = 2;
  int32 transaction_log_index = 3;
}

message TransactionLog {
  string address = 1;
  string data = 2;
  int32 transaction_log_index = 3;
  int32 transaction_index = 4;
  string transaction_hash = 5;
  string block_hash = 6;
  string block_number = 7;
  bool removed = 8;

  repeated string topics = 9;
}

message TransactionReceipt {
  bool status = 1;
  string block_hash = 2;
  string block_number = 3;
  string transaction_hash = 4;
  int32 transaction_index = 5;
  string from = 6;
  int64 cumulative_gas_used = 7;
  int64 gas_used = 8;
  string logs_bloom = 9;
  repeated TransactionLog logs = 10;

  optional string error = 11;
  optional string type = 12;

  optional string to = 13;
  optional string contract_address = 14;
}
