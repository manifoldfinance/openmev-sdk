{"version":3,"file":"use-react-wallet.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import type { State, StoreApi } from 'zustand/vanilla'\nimport type { EventEmitter } from 'node:events'\n\nexport interface Web3ReactState extends State {\n  chainId: number | undefined\n  accounts: string[] | undefined\n  activating: boolean\n  error: Error | undefined\n}\n\nexport type Web3ReactStore = StoreApi<Web3ReactState>\n\nexport interface Web3ReactStateUpdate {\n  chainId?: number\n  accounts?: string[]\n}\n\nexport interface Actions {\n  startActivation: () => void\n  update: (stateUpdate: Web3ReactStateUpdate) => void\n  reportError: (error: Error) => void\n  reset: () => void\n}\n\n// per EIP-1193\nexport interface RequestArguments {\n  readonly method: string\n  readonly params?: readonly unknown[] | object\n}\n\n// per EIP-1193\nexport interface Provider extends EventEmitter {\n  request(args: RequestArguments): Promise<unknown>\n}\n\nexport abstract class Connector {\n  public provider: Provider | undefined\n\n  protected readonly actions: Actions\n\n  constructor(actions: Actions) {\n    this.actions = actions\n  }\n\n  public abstract activate(...args: any[]): Promise<void> | void\n  public deactivate?(...args: any[]): Promise<void> | void\n}\n"],"names":["actions"],"mappings":"sFAwCE,SAAYA,QACLA,QAAUA"}