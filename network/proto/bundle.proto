syntax = "proto3";

package com.manifoldfinance.protobuf.bundle;

import "action.proto";
import "eth.proto";

option java_multiple_files = true;
option cc_enable_arenas = true;

message BundleKey {
  string block_number = 1;
}

message SignedTransaction {
  string signer = 1;                  // hex encoded address
  string from = 2;                    // hex encoded address
  string to = 3;                      // hex encoded address, target market
  string tx_hash = 4;                 // hex encoded
  string signed_tx = 5;               // hex encoded
}

message PlatformTransaction {
  string sender = 1;                   // hex encoded address, platform account from which to generate the transaction
  com.manifoldfinance.protobuf.eth.Transaction transaction = 14;

  // one of these fields are set after receipt from the arbitrage engine and before tx generation by the eth signer
  oneof action {
    com.manifoldfinance.protobuf.action.ERC20Approval erc20_approval = 15;
    com.manifoldfinance.protobuf.action.SwapExactTokensForTokens swap_exact_tokens_for_tokens = 16;
    com.manifoldfinance.protobuf.action.SwapTokensForExactTokens swap_tokens_for_exact_tokens = 17;
    com.manifoldfinance.protobuf.action.SwapExactETHForTokens swap_exact_eth_for_tokens = 18;
    com.manifoldfinance.protobuf.action.SwapTokensForExactETH swap_tokens_for_exact_ETH = 19;
    com.manifoldfinance.protobuf.action.SwapExactTokensForETH swap_exact_tokens_for_ETH = 20;
    com.manifoldfinance.protobuf.action.SwapETHForExactTokens swap_eth_for_exact_tokens = 21;
    com.manifoldfinance.protobuf.action.SwapExactTokensForTokensSupportingFeeOnTransferTokens swap_exact_tokens_for_tokens_supporting_fee_on_transfer_tokens = 22;
    com.manifoldfinance.protobuf.action.SwapExactETHForTokensSupportingFeeOnTransferTokens swap_exact_eth_for_tokens_supporting_fee_on_transfer_tokens = 23;
    com.manifoldfinance.protobuf.action.SwapExactTokensForETHSupportingFeeOnTransferTokens swap_exact_tokens_for_eth_supporting_fee_on_transfer_tokens = 24;
    com.manifoldfinance.protobuf.action.SwapExactTokensForTokensWithFlashloan swap_exact_tokens_for_tokens_with_flashloan = 25;
    com.manifoldfinance.protobuf.action.SwapExactTokensForTokensWithFlashloanMulti swap_exact_tokens_for_tokens_with_flashloan_multi = 26;
  }
}

message MinerBribe {
  string sender = 1;                   // hex encoded address, platform account from which to generate the transaction
  com.manifoldfinance.protobuf.eth.Transaction transaction = 14;
}

message Action {
  oneof transaction {
    SignedTransaction signed_transaction = 8;
    PlatformTransaction platform_transaction = 9;
  }
}

message BundleForSigning {

  string block_number = 1;
  string parent_hash = 2;
  string bundle_source_id = 3;

  MinerBribe miner_bribe = 14;

  // indicates the min balances after successful execution of the bundle
  // used in the check and send miner bribe contract to ensure we only payout when our bundle executes as expected
  repeated com.manifoldfinance.protobuf.eth.AccountBalance expected_min_account_balances = 15;

  // mix of user and platform transactions
  repeated Action actions = 16;
}

message BundleForSending {
  string block_number = 1;
  string parent_hash = 2;
  string bundle_source_id = 3;
  repeated SignedTransaction transactions = 10;
}
